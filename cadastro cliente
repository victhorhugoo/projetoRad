import sqlite3 as conector

#criar tabela cliente
def criar_tabela_cliente():
    #abertura da conexao
    try:
        conexao = conector.connect("C:/Banco_Aplicat_Python/trabalhoPy.db")
        cursor = conexao.cursor()
        print('Conexao com o bando de dados realizado com sucesso!')
    
        sql1 = '''CREATE TABLE IF NOT EXISTS cliente(
                    cpf INTEGER PRIMARY KEY NOT NULL,
                    nome TEXT NOT NULL,
                    telefone TEXT NOT NULL,
                    data_nascimento INTEGER NOT NULL,
                    endereço TEXT NOT NULL, 
                    picture TEXT NOT NULL
                    );'''
        cursor.execute(sql1)
        conexao.commit()
        print('Tabela cliente foi criada com sucesso!')

    except conector.DatabaseError as err:
        print('erro ao criar tabela cliente: ', err)

    finally:
        if(conexao):    
            cursor.close()
            conexao.close()


#criar tabela categoria
def criar_tabela_categoria():
    #abertura da conexao
    try:
        conexao = conector.connect("C:/Banco_Aplicat_Python/trabalhoPy.db")
        cursor = conexao.cursor()
        print('Conexao com o bando de dados realizado com sucesso!')
    
        sql = '''CREATE TABLE IF NOT EXISTS categoria(
                    nome TEXT PRIMARY KEY AUTOINCREMENT NOT NULL
                    );'''
        cursor.execute(sql)
        conexao.commit()
        print('Tabela categoria foi criada com sucesso!')

    except conector.DatabaseError as err:
        print('erro ao criar tabela categoria: ', err)

    finally:
        if(conexao):    
            cursor.close()
            conexao.close()


#criar tabela produto
def criar_tabela_produto():
    #abertura da conexao
    try:
        conexao = conector.connect("C:/Banco_Aplicat_Python/trabalhoPy.db")
        cursor = conexao.cursor()
        print('Conexao com o bando de dados realizado com sucesso!')
    
        sql = '''CREATE TABLE IF NOT EXISTS produto(
                    id INTEGER NOT NULL,
                    nome TEXT NOT NULL,
                    preço FLOAT NOT NULL,
                    cliente INTEGER NOT NULL,
                    categoria TEXT NOT NULL,
                    PRIMARY KEY (id),
                    FOREIGN KEY(cliente) REFERENCES cliente(cpf),
                    FOREIGN KEY(categoria) REFERENCES categoria(nome)
                    );'''
        cursor.execute(sql)
        conexao.commit()
        print('Tabela produto foi criada com sucesso!')

    except conector.DatabaseError as err:
        print('erro ao criar tabela produto: ', err)

    finally:
        if(conexao):    
            cursor.close()
            conexao.close()            

# cadastrar cliente
def cadastrar_cliente():
    print("cadastrando")
    cpf = int(input("informe o cpf: "))
    nome = input("informe o seu nome: ")
    telefone = int(input("insforme o telefone: "))
    data_nascimento = int(input("informe a data de nascimento: "))
    endereço = input("informe o endereço: ") 
    picture = int(input("foto: "))
    return cpf, nome, telefone, data_nascimento, endereço, picture


#inserir dados de clientes
def inserir_dados(cpf, nome, telefone, data_nascimento, endereço, picture):
    try:
        conexao = conector.connect("C:/Banco_Aplicat_Python/trabalhoPy.db")
        cursor = conexao.cursor()
        print('Conexao com o bando de dados realizado com sucesso!')
        sql = '''INSERT INTO cliente(
                    cpf, 
                    nome, 
                    telefone, 
                    data_nascimento, 
                    endereço, 
                    picture) VALUES (:cpf, :nome, :telefone, :data_nascimento, :endereço, :picture);'''
        cursor.execute(sql, {"cpf": cpf,
                             "nome": nome,
                             "telefone": telefone,
                             "data_nascimento": data_nascimento,
                             "endereço": endereço,
                             "picture": picture})
        print('dados inseridos com sucesso!')
        conexao.commit()
    except conector.DatabaseError as err:
        print('Erro ao inserir dados! ', err)
    finally:
        if(conexao):
            cursor.close()
            conexao.close()

#alterar dados
def alterar_dados():
    try:
        conexao = conector.connect("C:/Banco_Aplicat_Python/trabalhoPy.db")
        cursor = conexao.cursor()

        comando1 = 'UPDATE cliente SET nome=? WHERE cpf=:cpf;'
        cursor.execute(comando1,(True,))

        comando2 = 'UPDATE cliente SET telefone=? WHERE cpf=:cpf;'
        cursor.execute(comando2,(True,))

        comando3 = 'UPDATE cliente SET data_nascimento=? WHERE cpf=:cpf;'
        cursor.execute(comando3,(True,))

        comando4 = 'UPDATE cliente SET endereço=? WHERE cpf=:cpf;'
        cursor.execute(comando4,(True,))

        conexao.commit()
        print('Dados alterados')
    except conector.DatabaseError as err:
        print('Erro ao alterar dados! ', err)
    finally:
        if(conexao):
            cursor.close()
            conexao.close()

#excluindo dados
def excluir_dados():
    try:
        conexao = conector.connect("C:/Banco_Aplicat_Python/trabalhoPy.db")
        cursor = conexao.cursor()
        comando = 'DELETE FROM cliente WHERE cpf=12345678900;'
        cursor.execute(comando)
        conexao.commit()
        print('Excluido com sucesso')
    except conector.DatabaseError as err:
        print('Erro ao excluir! ', err)
    finally:
        if(conexao):
            cursor.close()
            conexao.close()

#listando os clientes
def listar_clientes():
    try:
        conexao = conector.connect("C:/Banco_Aplicat_Python/trabalhoPy.db")
        cursor = conexao.cursor()
        print('Conexão com o banco de dados realizada com sucesso!')
    
        #execução de comandos sql
        sql = '''SELECT * FROM cliente;'''
        cursor.execute(sql)
        #recuperação de dados
        registros = cursor.fetchall()
        print('Tipo retornado: ', type(registros))

        #saída de dados sem formatação
        for reg in registros:
            cpf, nome, telefone, data_nascimento, endereço, picture = reg
            print('CPF: ',cpf,'Nome: ',nome,'Telefone: ',telefone,'Data de nascimento: ',data_nascimento,'Endereço: ',endereço,'Foto: ',picture)
    except conector.DatabaseError as err:
        print('Erro ao mostrar lista', err)
    finally:
        if(conexao):
            cursor.close()
            conexao.close()

#executando as funções
criar_tabela_cliente()
criar_tabela_categoria()
criar_tabela_produto
cpf, nome, telefone, data_nascimento, endereço, picture = cadastrar_cliente()
inserir_dados(cpf, nome, telefone, data_nascimento, endereço, picture)
alterar_dados()
"""excluir_dados()
listar_clientes() """
print('concluido')
